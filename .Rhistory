#| label: carga-datos
#| context: data
#| warning: false
#| message: false
#| code-fold: true
# carga de datos
areas_conservacion <-
st_read(
dsn = "areas_conservacion_simp_10m.geojson",
quiet = TRUE
)
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false
#| code-fold: true
# Carga de paquetes
library(tidyverse)
library(DT)
library(plotly)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(viridisLite)
library(shiny)
library(readr)
library(dplyr)
library(ggplot2)
library(terra)
library(ggthemes)
#| label: carga-datos
#| context: data
#| warning: false
#| message: false
#| code-fold: true
# carga de datos
areas_conservacion <-
st_read(
dsn = "areas_conservacion_simp_10m.geojson",
quiet = TRUE
)
areas_conservacion <-
areas_conservacion |>
st_transform(4326)
orquideas <-
st_read(
"orquideas.csv",
options = c(
"X_POSSIBLE_NAMES=decimalLongitude",
"Y_POSSIBLE_NAMES=decimalLatitude"
),
quiet = TRUE
)
st_crs(orquideas) <- 4326
# Union entre areas de conservacion y orquideas
orquideas_union_areas_conservacion <-
st_join(
x = orquideas,
y = dplyr::select(areas_conservacion, nombre_ac),
join = st_within
)
# Riquezas de registros
riqueza_orquideas_areas_conservacion_registros <-
orquideas_union_areas_conservacion |>
st_drop_geometry() |>
group_by(nombre_ac) |>
summarize(riqueza_orquideas_areas_conservacion_registros = n_distinct(species, na.rm = TRUE))
# Union no espacial de orquideas con el dataframe de riqueza
areas_conservacion_union_riqueza_orquideas_registros <-
left_join(
x = areas_conservacion,
y = riqueza_orquideas_areas_conservacion_registros,
by = "nombre_ac"
) |>
replace_na(list(riqueza_orquideas_areas_conservacion_registros = 0))
#| label: panel-widgets-entrada
#| panel: sidebar
#| warning: false
#| message: false
#| code-fold: true
# Lista ordenada de especies
# con un elemento adicional = "Todas"
lista_especies <- unique(orquideas$species)
lista_especies <- sort(lista_especies)
lista_especies <- c("Todas", lista_especies)
# Widget de lista de selección de especies
selectInput(
inputId = "especie",      # identificador del widget
label = "Especie",        # etiqueta de la lista
choices = lista_especies, # lista de opciones para seleccionar de la lista
selected = "Todas"        # opción seleccionada por defecto
)
# Lista ordenada de años
lista_anios <- unique(orquideas$year)
lista_anios <- sort(lista_anios)
lista_anios <- c("Todos", lista_anios)
# Widget de lista de selección de años
selectInput(
inputId = "anio",      # identificador del widget
label = "Año",         # etiqueta de la lista
choices = lista_anios, # lista de opciones para seleccionar de la lista
selected = "Todos"     # opción seleccionada por defecto
)
# Lista ordenada de meses
lista_meses <- unique(orquideas$month)
lista_meses <- sort(lista_meses)
lista_meses <- c("Todos", lista_meses)
# Widget de lista de selección de meses
selectInput(
inputId = "mes",
label = "Mes",
choices = lista_meses,
selected = "Todos"
)
#| label: panel-widgets-salida
#| panel: center
#| warning: false
#| message: false
#| code-fold: true
h3("Distribución geoespacial")
HTML("<p>")
leafletOutput(
outputId = "mapa"
)
# Encabezado de nivel 3
h3("Registros de presencia")
# Línea vacía
HTML("<p>")
# Widget de tabla interactiva
dataTableOutput(
outputId =  "tabla" # identificador del widget
)
h3("Registros de presencia por especie")
HTML("<p>")
plotlyOutput(
outputId = "grafico"
)
#| label: servidor
#| context: server
#| warning: false
#| message: false
#| code-fold: true
# Función reactiva para filtrar los registros de presencia de félidos
# de acuerdo con los filtros especificados por el usuario
filtrar_orquideas <- reactive({
# Valor inicial del objeto que va a retornarse
orquideas_filtrados <- orquideas
# Se realiza el filtro, solamente si el usario ha seleccionado
# una opción diferente a "Todas" en la lista de selección de especies
if (input$especie != "Todas") {
orquideas_filtrados <-
orquideas_filtrados |>
filter(species == input$especie)
}
# Filtro de años (lista de selección)
if (input$anio != "Todos") {
orquideas_filtrados <-
orquideas_filtrados |>
filter(year == input$anio)
}
# Este bloque es solo para demostrar el funcionamiento de un slider
# # Filtro de años (slider)
# felidos_filtrados <-
# 	felidos_filtrados |>
# 	filter(year == input$anio_slider)
# Filtro de meses
if (input$mes != "Todos") {
orquideas_filtrados <-
orquideas_filtrados |>
filter(month == input$mes)
}
return(orquideas_filtrados)
})
install.packages("dplyr")
#| label: carga-paquetes
#| context: setup
#| warning: false
#| message: false
# Carga de paquetes
library(tidyverse)
library(DT)
library(plotly)
library(sf)
library(leaflet)
library(leaflet.extras)
library(leafem)
library(viridisLite)
library(shiny)
library(readr)
library(dplyr)
library(ggplot2)
library(terra)
library(ggthemes)
install.packages("rmarkdown")
View(areas_conservacion)
View(areas_conservacion_union_riqueza_orquideas_registros)
